name: main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

## ref: https://docs.github.com/en/actions/examples/using-concurrency-expressions-and-a-test-matrix
concurrency:
#  group: ${{ github.ref }}
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    strategy:
      fail-fast: false
      ## ref: https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
#      max-parallel: 2
      matrix:
        template:
          - name: CentOS8
            build_distribution_config_dir: CentOS
            build_release_config_dir: CentOS/8/server
            build_type: small
          - name: CentOS9
            build_distribution_config_dir: CentOS
            build_release_config_dir: CentOS/9/server
            build_type: small
          - name: CentOS10
            build_distribution_config_dir: CentOS
            build_release_config_dir: CentOS/10/server
            build_type: small
          - name: Debian11
            build_distribution_config_dir: Debian
            build_release_config_dir: Debian/11/server
            build_type: small
          - name: Debian12
            build_distribution_config_dir: Debian
            build_release_config_dir: Debian/12/server
            build_type: small
          - name: RHEL8
            build_distribution_config_dir: RHEL
            build_release_config_dir: RHEL/8/server
            build_type: small
          - name: RHEL9
            build_distribution_config_dir: RHEL
            build_release_config_dir: RHEL/9/server
            build_type: small
          - name: Ubuntu2204
            build_distribution_config_dir: Ubuntu
            build_release_config_dir: Ubuntu/22.04/server
            build_type: small
          - name: Ubuntu2404
            build_distribution_config_dir: Ubuntu
            build_release_config_dir: Ubuntu/24.04/server
            build_type: small
          - name: Windows2016
            build_distribution_config_dir: Windows/server
            build_release_config_dir: Windows/server/2016
            build_type: standard
          - name: Windows2019
            build_distribution_config_dir: Windows/server
            build_release_config_dir: Windows/server/2019
            build_type: standard
          - name: Windows2022
            build_distribution_config_dir: Windows/server
            build_release_config_dir: Windows/server/2022
            build_type: standard

    name: Validate
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
        with:
          path: "${{ github.repository }}"
          submodules: true

      - name: "Download Packer"
        run: |
          PACKER_LATEST_VERSION=$(curl -s https://checkpoint-api.hashicorp.com/v1/check/packer | jq -r -M '.current_version')
          curl -s "https://releases.hashicorp.com/packer/${PACKER_LATEST_VERSION}/packer_${PACKER_LATEST_VERSION}_linux_amd64.zip" --output /tmp/packer_linux_amd64.zip
          sudo unzip -o /tmp/packer_linux_amd64.zip -d /usr/local/bin/

      - name: "Run packer init"
        working-directory: "${{ github.repository }}/templates"
        run: packer init ${{ matrix.template.build_distribution_config_dir }}/

      - name: "Run packer validate"
        working-directory: "${{ github.repository }}/templates"
        run: |
            packer validate \
                -only vsphere-iso.${{ matrix.template.build_distribution_config_dir }} \
                -var-file=env-vars.PROD.json.pkrvars.hcl \
                -var-file=${{ matrix.template.build_distribution_config_dir }}/distribution-vars.json.pkrvars.hcl \
                -var-file=${{ matrix.template.build_release_config_dir }}/template.json.pkrvars.hcl \
                -var-file=${{ matrix.template.build_release_config_dir }}/box_info.${{ matrix.template.build_type }}.json.pkrvars.hcl \
                -var vm_template_build_name=$TEMPLATE_BUILD_ID \
                -var vm_template_build_type=${{ matrix.template.build_type }} \
                -var vm_template_name=$TEMPLATE_BUILD_ID \
                -var vm_build_env=PROD \
                ${{ matrix.template.build_distribution_config_dir }}/
        env:
          TEMPLATE_BUILD_ID: ${{ github.job }}-${{ matrix.template.name }}-${{ github.run_id }}
          PACKER_USER_USERNAME: 'packer'
          PACKER_USER_PASSWORD: 'foobar'
          VMWARE_VCENTER_USERNAME: 'administrator@vsphere.local'
          VMWARE_VCENTER_PASSWORD: 'foobar'
          VMWARE_ESXI_PASSWORD: 'foobar'

#  release:
#    needs:
#      - validate
#    name: Release
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Setup Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: 'lts/*'
#      - name: Install dependencies
#        run: |
#          npm install -D \
#            "@semantic-release/commit-analyzer" \
#            "@semantic-release/release-notes-generator" \
#            "@semantic-release/changelog" \
#            "@semantic-release/github" \
#            "@semantic-release/git"
#      - name: Release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: npx semantic-release
